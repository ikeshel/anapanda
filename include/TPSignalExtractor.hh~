
//////////////////////////////////////////////////////////////////////////
//                                                                      //
// author: i.keshelashvili@unibas.ch                                    //
//                                                                      //
//                                                                      //
//////////////////////////////////////////////////////////////////////////

#ifndef TPSIGNALEXTRACTOR_HH
#define TPSIGNALEXTRACTOR_HH

#include <iostream>
#include <fstream>

#include <TH1D.h>
#include <TLine.h>

#include <TPConstants.hh>

using namespace std;

class TPSignalExtractor
{
protected:

  //
  //
  TLine *lStart[MAX_NHITS];
  TLine *lStopp[MAX_NHITS];

  TLine *lThreshold;

public:
  TPSignalExtractor();
  ~TPSignalExtractor();

  int fNHits; // store number of hits

  //
  //
  void FindHits(TH1D*, int);

  // Get's
  //
  int GetNumbOfHits() { return fNHits; };

  TLine* GetThresholdLine() { return lThreshold; };
  TLine* GetStartLine(int i) { return lStart[i]; };
  TLine* GetStoppLine(int i) { return lStopp[i]; };
  

  ClassDef( TPSignalExtractor, 0 ) // A basic class 
    };

#endif

