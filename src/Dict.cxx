//
// File generated by rootcint at Wed Oct  3 23:54:59 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TPFileReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPFileReader(void *p = 0);
   static void *newArray_TPFileReader(Long_t size, void *p);
   static void delete_TPFileReader(void *p);
   static void deleteArray_TPFileReader(void *p);
   static void destruct_TPFileReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPFileReader*)
   {
      ::TPFileReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPFileReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPFileReader", ::TPFileReader::Class_Version(), "./include/TPFileReader.hh", 25,
                  typeid(::TPFileReader), DefineBehavior(ptr, ptr),
                  &::TPFileReader::Dictionary, isa_proxy, 4,
                  sizeof(::TPFileReader) );
      instance.SetNew(&new_TPFileReader);
      instance.SetNewArray(&newArray_TPFileReader);
      instance.SetDelete(&delete_TPFileReader);
      instance.SetDeleteArray(&deleteArray_TPFileReader);
      instance.SetDestructor(&destruct_TPFileReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPFileReader*)
   {
      return GenerateInitInstanceLocal((::TPFileReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPFileReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPSignalExtractor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TPSignalExtractor(void *p);
   static void deleteArray_TPSignalExtractor(void *p);
   static void destruct_TPSignalExtractor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPSignalExtractor*)
   {
      ::TPSignalExtractor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPSignalExtractor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPSignalExtractor", ::TPSignalExtractor::Class_Version(), "./include/TPSignalExtractor.hh", 24,
                  typeid(::TPSignalExtractor), DefineBehavior(ptr, ptr),
                  &::TPSignalExtractor::Dictionary, isa_proxy, 4,
                  sizeof(::TPSignalExtractor) );
      instance.SetDelete(&delete_TPSignalExtractor);
      instance.SetDeleteArray(&deleteArray_TPSignalExtractor);
      instance.SetDestructor(&destruct_TPSignalExtractor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPSignalExtractor*)
   {
      return GenerateInitInstanceLocal((::TPSignalExtractor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPSignalExtractor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPManager(void *p = 0);
   static void *newArray_TPManager(Long_t size, void *p);
   static void delete_TPManager(void *p);
   static void deleteArray_TPManager(void *p);
   static void destruct_TPManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPManager*)
   {
      ::TPManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPManager", ::TPManager::Class_Version(), "./include/TPManager.hh", 29,
                  typeid(::TPManager), DefineBehavior(ptr, ptr),
                  &::TPManager::Dictionary, isa_proxy, 4,
                  sizeof(::TPManager) );
      instance.SetNew(&new_TPManager);
      instance.SetNewArray(&newArray_TPManager);
      instance.SetDelete(&delete_TPManager);
      instance.SetDeleteArray(&deleteArray_TPManager);
      instance.SetDestructor(&destruct_TPManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPManager*)
   {
      return GenerateInitInstanceLocal((::TPManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TPFileReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPFileReader::Class_Name()
{
   return "TPFileReader";
}

//______________________________________________________________________________
const char *TPFileReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPFileReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPFileReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPFileReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPFileReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPFileReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPFileReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPFileReader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPSignalExtractor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPSignalExtractor::Class_Name()
{
   return "TPSignalExtractor";
}

//______________________________________________________________________________
const char *TPSignalExtractor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPSignalExtractor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPSignalExtractor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPSignalExtractor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPSignalExtractor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPSignalExtractor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPSignalExtractor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPSignalExtractor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPManager::Class_Name()
{
   return "TPManager";
}

//______________________________________________________________________________
const char *TPManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TPManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPManager::Class(),this);
   }
}

//______________________________________________________________________________
void TPManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPManager.
      TClass *R__cl = ::TPManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cMain", &cMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimer", &fTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fhSignal[3]", &fhSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBurst", &fNBurst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSigExt_PMT", &fSigExt_PMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSigExt_AMP", &fSigExt_AMP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSigExt_SHP", &fSigExt_SHP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrEvt", &fCurrEvt);
      TObject::ShowMembers(R__insp);
      TPFileReader::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPManager : new ::TPManager;
   }
   static void *newArray_TPManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPManager[nElements] : new ::TPManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPManager(void *p) {
      delete ((::TPManager*)p);
   }
   static void deleteArray_TPManager(void *p) {
      delete [] ((::TPManager*)p);
   }
   static void destruct_TPManager(void *p) {
      typedef ::TPManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPManager

//______________________________________________________________________________
void TPFileReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPFileReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPFileReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPFileReader::Class(),this);
   }
}

//______________________________________________________________________________
void TPFileReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPFileReader.
      TClass *R__cl = ::TPFileReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "szFileName[128]", szFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNChannel", &fNChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotaEvt", &fTotaEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotaEvtPrc", &fTotaEvtPrc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2D[3]", &h2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hProj[3]", &hProj);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPFileReader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPFileReader : new ::TPFileReader;
   }
   static void *newArray_TPFileReader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPFileReader[nElements] : new ::TPFileReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPFileReader(void *p) {
      delete ((::TPFileReader*)p);
   }
   static void deleteArray_TPFileReader(void *p) {
      delete [] ((::TPFileReader*)p);
   }
   static void destruct_TPFileReader(void *p) {
      typedef ::TPFileReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPFileReader

//______________________________________________________________________________
void TPSignalExtractor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPSignalExtractor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPSignalExtractor::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPSignalExtractor::Class(),this);
   }
}

//______________________________________________________________________________
void TPSignalExtractor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPSignalExtractor.
      TClass *R__cl = ::TPSignalExtractor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxHits", &fMaxHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNHits", &fNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegrationWidth", &fIntegrationWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHist", &hHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSignalDist[2]", &hSignalDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOffset[2]", &fOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lThreshold", &lThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lStart[2]", &lStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lStopp[2]", &lStopp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPSignalExtractor(void *p) {
      delete ((::TPSignalExtractor*)p);
   }
   static void deleteArray_TPSignalExtractor(void *p) {
      delete [] ((::TPSignalExtractor*)p);
   }
   static void destruct_TPSignalExtractor(void *p) {
      typedef ::TPSignalExtractor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPSignalExtractor

/********************************************************
* src/Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TPFileReader */
static int G__Dict_280_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPFileReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPFileReader[n];
     } else {
       p = new((void*) gvp) TPFileReader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPFileReader;
     } else {
       p = new((void*) gvp) TPFileReader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TPFileReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPFileReader*) G__getstructoffset())->ReadHistoFile((char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPFileReader*) G__getstructoffset())->Get2DHisto((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TPFileReader*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPFileReader*) G__getstructoffset())->GetProjection((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPFileReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPFileReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPFileReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPFileReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPFileReader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPFileReader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPFileReader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPFileReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPFileReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPFileReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPFileReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_280_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPFileReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_280_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPFileReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPFileReader(*(TPFileReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TPFileReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPFileReader G__TTPFileReader;
static int G__Dict_280_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPFileReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPFileReader*) (soff+(sizeof(TPFileReader)*i)))->~G__TTPFileReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPFileReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPFileReader*) (soff))->~G__TTPFileReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_280_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPFileReader* dest = (TPFileReader*) G__getstructoffset();
   *dest = *(TPFileReader*) libp->para[0].ref;
   const TPFileReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPSignalExtractor */
static int G__Dict_353_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPSignalExtractor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPSignalExtractor((char*) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TPSignalExtractor((char*) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TPSignalExtractor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPSignalExtractor*) G__getstructoffset())->FindHits((int) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPSignalExtractor*) G__getstructoffset())->SetMaxHits((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPSignalExtractor*) G__getstructoffset())->SetIntegrationWidth((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPSignalExtractor*) G__getstructoffset())->GetNumbOfHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPSignalExtractor*) G__getstructoffset())->GetOffset((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPSignalExtractor*) G__getstructoffset())->GetSignalDist((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPSignalExtractor*) G__getstructoffset())->GetThresholdLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPSignalExtractor*) G__getstructoffset())->GetStartLine((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TPSignalExtractor*) G__getstructoffset())->GetStoppLine((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TPSignalExtractor*) G__getstructoffset())->GetIntegral((int) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPSignalExtractor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPSignalExtractor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPSignalExtractor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPSignalExtractor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TPSignalExtractor*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPSignalExtractor*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPSignalExtractor*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPSignalExtractor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPSignalExtractor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPSignalExtractor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPSignalExtractor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_353_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPSignalExtractor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_353_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPSignalExtractor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPSignalExtractor(*(TPSignalExtractor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TPSignalExtractor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPSignalExtractor G__TTPSignalExtractor;
static int G__Dict_353_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPSignalExtractor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPSignalExtractor*) (soff+(sizeof(TPSignalExtractor)*i)))->~G__TTPSignalExtractor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPSignalExtractor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPSignalExtractor*) (soff))->~G__TTPSignalExtractor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_353_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPSignalExtractor* dest = (TPSignalExtractor*) G__getstructoffset();
   *dest = *(TPSignalExtractor*) libp->para[0].ref;
   const TPSignalExtractor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPManager */
static int G__Dict_354_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPManager[n];
     } else {
       p = new((void*) gvp) TPManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPManager;
     } else {
       p = new((void*) gvp) TPManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TPManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPManager*) G__getstructoffset())->DoStart((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPManager*) G__getstructoffset())->DoStop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPManager*) G__getstructoffset())->DoEvent((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPManager*) G__getstructoffset())->Next();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPManager*) G__getstructoffset())->DrawAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_354_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_354_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPManager(*(TPManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_TPManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPManager G__TTPManager;
static int G__Dict_354_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPManager*) (soff+(sizeof(TPManager)*i)))->~G__TTPManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPManager*) (soff))->~G__TTPManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_354_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPManager* dest = (TPManager*) G__getstructoffset();
   *dest = *(TPManager*) libp->para[0].ref;
   const TPManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TPFileReader */

/* TPSignalExtractor */

/* TPManager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_TPManager))) {
     TPManager *G__Lderived;
     G__Lderived=(TPManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TPManager),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,4,1);
     }
     {
       TPFileReader *G__Lpbase=(TPFileReader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_TPManager),G__get_linked_tagnum(&G__DictLN_TPFileReader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TPFileReader */
static void G__setup_memvarTPFileReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TPFileReader));
   { TPFileReader *p; p=(TPFileReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,4,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"szFileName[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNChannel=",0,"number of readout channel");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fTotaEvt=",0,"total number of events in file");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fTotaEvtPrc=",0,"1% of total number of events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2I),-1,-1,2,"h2D[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,2,"hProj[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPSignalExtractor */
static void G__setup_memvarTPSignalExtractor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TPSignalExtractor));
   { TPSignalExtractor *p; p=(TPSignalExtractor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMaxHits=",0,"maximum number of hits");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNHits=",0,"store number of hits");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fIntegrationWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,2,"hHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,2,"hSignalDist[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TF1),-1,-1,2,"fOffset[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLine),-1,-1,2,"lThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLine),-1,-1,2,"lStart[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLine),-1,-1,2,"lStopp[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPManager */
static void G__setup_memvarTPManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_TPManager));
   { TPManager *p; p=(TPManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"cMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TTimer),-1,-1,4,"fTimer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,4,"fhSignal[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNBurst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TPSignalExtractor),-1,-1,2,"fSigExt_PMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TPSignalExtractor),-1,-1,2,"fSigExt_AMP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TPSignalExtractor),-1,-1,2,"fSigExt_SHP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCurrEvt)-(long)(p)),105,0,0,-1,-1,-1,1,"fCurrEvt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTPFileReader(void) {
   /* TPFileReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TPFileReader));
   G__memfunc_setup("TPFileReader",1143,G__Dict_280_0_1, 105, G__get_linked_tagnum(&G__DictLN_TPFileReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHistoFile",1283,G__Dict_280_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get2DHisto",925,G__Dict_280_0_3, 85, G__get_linked_tagnum(&G__DictLN_TH2I), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__Dict_280_0_4, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjection",1341,G__Dict_280_0_5, 85, G__get_linked_tagnum(&G__DictLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_280_0_6, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPFileReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_280_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPFileReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_280_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPFileReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_280_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPFileReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Dict_280_0_10, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Dict_280_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Dict_280_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_280_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_280_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPFileReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_280_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPFileReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_280_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPFileReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_280_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPFileReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPFileReader", 1143, G__Dict_280_0_18, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TPFileReader), -1, 0, 1, 1, 1, 0, "u 'TPFileReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPFileReader", 1269, G__Dict_280_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_280_0_20, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TPFileReader), -1, 1, 1, 1, 1, 0, "u 'TPFileReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPSignalExtractor(void) {
   /* TPSignalExtractor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TPSignalExtractor));
   G__memfunc_setup("TPSignalExtractor",1726,G__Dict_353_0_1, 105, G__get_linked_tagnum(&G__DictLN_TPSignalExtractor), -1, 0, 2, 1, 1, 0, 
"C - - 0 - - U 'TH1D' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHits",793,G__Dict_353_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - U 'TH1D' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxHits",1002,G__Dict_353_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntegrationWidth",1968,G__Dict_353_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumbOfHits",1279,G__Dict_353_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffset",903,G__Dict_353_0_6, 85, G__get_linked_tagnum(&G__DictLN_TF1), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignalDist",1298,G__Dict_353_0_7, 85, G__get_linked_tagnum(&G__DictLN_TH1D), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThresholdLine",1621,G__Dict_353_0_8, 85, G__get_linked_tagnum(&G__DictLN_TLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartLine",1206,G__Dict_353_0_9, 85, G__get_linked_tagnum(&G__DictLN_TLine), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStoppLine",1214,G__Dict_353_0_10, 85, G__get_linked_tagnum(&G__DictLN_TLine), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntegral",1110,G__Dict_353_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - U 'TH1D' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_353_0_12, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPSignalExtractor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_353_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPSignalExtractor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_353_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPSignalExtractor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_353_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPSignalExtractor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Dict_353_0_16, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Dict_353_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Dict_353_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_353_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_353_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPSignalExtractor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_353_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPSignalExtractor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_353_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPSignalExtractor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_353_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPSignalExtractor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPSignalExtractor", 1726, G__Dict_353_0_24, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TPSignalExtractor), -1, 0, 1, 1, 1, 0, "u 'TPSignalExtractor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPSignalExtractor", 1852, G__Dict_353_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_353_0_26, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TPSignalExtractor), -1, 1, 1, 1, 1, 0, "u 'TPSignalExtractor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPManager(void) {
   /* TPManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_TPManager));
   G__memfunc_setup("TPManager",863,G__Dict_354_0_1, 105, G__get_linked_tagnum(&G__DictLN_TPManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStart",705,G__Dict_354_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStop",601,G__Dict_354_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoEvent",693,G__Dict_354_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__Dict_354_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAll",679,G__Dict_354_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_354_0_7, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_354_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_354_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_354_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_354_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_354_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_354_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_354_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_354_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPManager", 863, G__Dict_354_0_19, (int) ('i'), G__get_linked_tagnum(&G__DictLN_TPManager), -1, 0, 1, 1, 1, 0, "u 'TPManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPManager", 989, G__Dict_354_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_354_0_21, (int) ('u'), G__get_linked_tagnum(&G__DictLN_TPManager), -1, 1, 1, 1, 1, 0, "u 'TPManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__DictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__DictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__DictLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G__DictLN_TPFileReader = { "TPFileReader" , 99 , -1 };
G__linked_taginfo G__DictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__DictLN_TPSignalExtractor = { "TPSignalExtractor" , 99 , -1 };
G__linked_taginfo G__DictLN_TPManager = { "TPManager" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TClass.tagnum = -1 ;
  G__DictLN_TBuffer.tagnum = -1 ;
  G__DictLN_TMemberInspector.tagnum = -1 ;
  G__DictLN_TObject.tagnum = -1 ;
  G__DictLN_TTimer.tagnum = -1 ;
  G__DictLN_TFile.tagnum = -1 ;
  G__DictLN_TCanvas.tagnum = -1 ;
  G__DictLN_TF1.tagnum = -1 ;
  G__DictLN_TH1D.tagnum = -1 ;
  G__DictLN_TH2I.tagnum = -1 ;
  G__DictLN_TPFileReader.tagnum = -1 ;
  G__DictLN_TLine.tagnum = -1 ;
  G__DictLN_TPSignalExtractor.tagnum = -1 ;
  G__DictLN_TPManager.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictLN_TTimer);
   G__get_linked_tagnum_fwd(&G__DictLN_TFile);
   G__get_linked_tagnum_fwd(&G__DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__DictLN_TF1);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__DictLN_TH2I);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TPFileReader),sizeof(TPFileReader),-1,263424,"A basic class ",G__setup_memvarTPFileReader,G__setup_memfuncTPFileReader);
   G__get_linked_tagnum_fwd(&G__DictLN_TLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TPSignalExtractor),sizeof(TPSignalExtractor),-1,295936,"A basic class ",G__setup_memvarTPSignalExtractor,G__setup_memfuncTPSignalExtractor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_TPManager),sizeof(TPManager),-1,292096,"A basic class ",G__setup_memvarTPManager,G__setup_memfuncTPManager);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

